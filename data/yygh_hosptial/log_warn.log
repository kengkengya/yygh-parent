2021-07-05 10:02:31.401 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 10:02:33.372 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 10:02:33.382 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 10:32:00.674 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 10:32:01.563 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 10:32:01.568 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 12:44:15.183 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 12:44:17.501 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 12:44:17.506 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 12:46:40.995 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 12:46:42.860 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 12:46:42.871 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 12:53:40.911 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 12:53:42.491 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 12:53:42.496 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 13:52:28.639 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 13:52:33.408 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 13:52:33.417 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:36:27.374 [http-nio-8201-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:36:51.356 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 14:36:53.311 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:36:53.316 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:37:33.390 [http-nio-8201-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:39:17.207 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 14:39:18.909 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:39:18.915 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:39:31.283 [http-nio-8201-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:40:06.458 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 14:40:06.467 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 14:40:08.182 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:40:08.187 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:40:22.105 [http-nio-8201-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:40:24.721 [http-nio-8201-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:40:32.738 [http-nio-8201-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:47:14.284 [http-nio-8201-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:51:32.225 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 14:51:32.239 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 14:51:34.660 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:51:34.667 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:52:10.163 [http-nio-8201-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 14:54:15.153 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 14:54:15.163 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 14:54:16.884 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 14:54:16.889 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:21:01.914 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 15:21:01.925 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 15:21:04.305 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:21:04.313 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:27:09.366 [http-nio-8201-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 15:28:18.953 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.atguigu.yygh.hosp]' package. Please check your configuration.
2021-07-05 15:28:19.309 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:28:21.047 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 15:28:26.270 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.atguigu.yygh.hosp]' package. Please check your configuration.
2021-07-05 15:28:27.655 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:28:27.948 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 15:28:45.024 [restartedMain] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.atguigu.yygh.hosp]' package. Please check your configuration.
2021-07-05 15:28:46.289 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:28:46.471 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 15:29:34.469 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 15:29:34.484 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 15:29:36.974 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:29:36.983 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:31:27.805 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 15:31:27.820 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 15:31:29.547 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:31:29.553 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:31:49.311 [http-nio-8201-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.data.redis.serializer.SerializationException: Could not read JSON: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "ok" (class com.atguigu.yygd.common.result.Result), not marked as ignorable (3 known properties: "data", "code", "message"])
 at [Source: (byte[])"["com.atguigu.yygd.common.result.Result",{"code":200,"message":"成功","data":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"a4e171f4cf9b6816acdfb9ae62c414d7","depname":"专科","children":["java.util.ArrayList",[["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040878","depname":"多发性硬化专科门诊","children":null}],["com.atguigu.yygh.vo.hosp.DepartmentVo",{"depcode":"200040182","depname":"运动障碍病专科门诊","children":null}],["com.atguig"[truncated 35826 bytes]; line: 1, column: 36325] (through reference chain: com.atguigu.yygd.common.result.Result["ok"])]
2021-07-05 15:32:43.463 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 15:32:43.472 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 15:32:45.199 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 15:32:45.205 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 16:01:08.566 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 16:01:08.577 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 16:01:10.493 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 16:01:10.499 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 16:02:50.862 [restartedMain] WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2021-07-05 16:02:50.877 [restartedMain] WARN  o.s.d.m.c.index.MongoPersistentEntityIndexCreator - Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.
	Please use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.
	However, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.

	> -----------------------------------------------------------------------------------------
	> @EventListener(ApplicationReadyEvent.class)
	> public void initIndicesAfterStartup() {
	>
	>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);
	>
	>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);
	>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);
	> }
	> -----------------------------------------------------------------------------------------

2021-07-05 16:02:52.676 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2021-07-05 16:02:52.680 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
